[ :ref:`aws <cli:aws>` . :ref:`codepipeline <cli:aws codepipeline>` ]

.. _cli:aws codepipeline put-third-party-job-success-result:


**********************************
put-third-party-job-success-result
**********************************



===========
Description
===========



Represents the success of a third party job as returned to the pipeline by a job worker. Only used for partner actions.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/codepipeline-2015-07-09/PutThirdPartyJobSuccessResult>`_


========
Synopsis
========

::

    put-third-party-job-success-result
  --job-id <value>
  --client-token <value>
  [--current-revision <value>]
  [--continuation-token <value>]
  [--execution-details <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--job-id`` (string)


  The ID of the job that successfully completed. This is the same ID returned from PollForThirdPartyJobs.

  

``--client-token`` (string)


  The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.

  

``--current-revision`` (structure)


  Represents information about a current revision.

  



Shorthand Syntax::

    revision=string,changeIdentifier=string,created=timestamp,revisionSummary=string




JSON Syntax::

  {
    "revision": "string",
    "changeIdentifier": "string",
    "created": timestamp,
    "revisionSummary": "string"
  }



``--continuation-token`` (string)


  A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a partner action in progress. Future jobs will use this token in order to identify the running instance of the action. It can be reused to return additional information about the progress of the partner action. When the action is complete, no continuation token should be supplied.

  

``--execution-details`` (structure)


  The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline. 

  



Shorthand Syntax::

    summary=string,externalExecutionId=string,percentComplete=integer




JSON Syntax::

  {
    "summary": "string",
    "externalExecutionId": "string",
    "percentComplete": integer
  }



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.



======
Output
======

None